#!/usr/bin/env bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cd $DIR/../../../
echo "Running script from: $(pwd)"

# backup existing Vagrantfile
if [ -f Vagrantfile ] || [ -L Vagrantfile ]; then
    VERSION=$(date +"%Y%m%d_%H%M%S")
    mv Vagrantfile{,.bak.$VERSION}
    echo "Backing up current Vagrantfile to: Vagrantfile.$VERSION"
fi

# copy correct Vagrantfile in place
ln -s vagrantfiles/contributions/high-throughput-aws Vagrantfile
ls -alh Vagrantfile

echo "Setting credentials using: ./set_credentials.sh"
source set_credentials.sh || exit 1

# clear envars
unset SEEDS GATHER_IPS DEMO_HOST WEB_PORT

vagrant up --provider aws workstation dse0 dse1 dse2 dse3 dse4 dse5 dse6 dse7 dse8 dse9
# vagrant up --provider aws dse10 dse11 dse12 dse13 dse14 dse15 dse16 dse17 dse18 dse19

# collect DSE seeds
export GATHER_IPS=1
export OPSCENTER_HOST=$(vagrant provision workstation | grep GATHER_IPS | awk '{print $4}')
DSE0=$(vagrant provision dse0 | grep GATHER_IPS | awk '{print $4}')
DSE1=$(vagrant provision dse1 | grep GATHER_IPS | awk '{print $4}')
DSE2=$(vagrant provision dse2 | grep GATHER_IPS | awk '{print $4}')
unset GATHER_IPS

export SEEDS=$DSE0,$DSE1,$DSE2

vagrant provision workstation dse0 dse1 dse2 dse3 dse4 dse5 dse6 dse7 dse8 dse9
# vagrant provision dse10 dse11 dse12 dse13 dse14 dse15 dse16 dse17 dse18 dse19

WORKSTATION_PUBLIC_IP=$(vagrant awsinfo -k public_ip -m workstation)

echo "Seeds: ${SEEDS}"
echo "Testrunner: ${WORKSTATION_PUBLIC_IP}"
echo "Opscenter: http://${WORKSTATION_PUBLIC_IP}:8888/"
