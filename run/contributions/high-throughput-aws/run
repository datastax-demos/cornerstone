#!/usr/bin/env bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cd $DIR/../../../
echo "Running script from: $(pwd)"

# backup existing Vagrantfile
if [ -f Vagrantfile ] || [ -L Vagrantfile ]; then
    VERSION=$(date +"%Y%m%d_%H%M%S")
    mv Vagrantfile{,.bak.$VERSION}
    echo "Backing up current Vagrantfile to: Vagrantfile.$VERSION"
fi

# copy correct Vagrantfile in place
ln -s vagrantfiles/contributions/high-throughput-aws Vagrantfile
ls -alh Vagrantfile

echo "Setting credentials using: ./set_credentials.sh"
source set_credentials.sh || exit 1

# clear envars
unset SEEDS GATHER_IPS DEMO_HOST WEB_PORT

vagrant up --provider aws testrunner &
vagrant up --provider aws dse0 &
vagrant up --provider aws dse1 &
vagrant up --provider aws dse2 &
vagrant up --provider aws dse3 &
vagrant up --provider aws dse4 &

wait

# collect DSE seeds
export GATHER_IPS=1
DSE0=$(vagrant provision dse0 | grep GATHER_IPS | awk '{print $4}')
DSE1=$(vagrant provision dse1 | grep GATHER_IPS | awk '{print $4}')
DSE2=$(vagrant provision dse2 | grep GATHER_IPS | awk '{print $4}')
DSE3=$(vagrant provision dse3 | grep GATHER_IPS | awk '{print $4}')
DSE4=$(vagrant provision dse4 | grep GATHER_IPS | awk '{print $4}')
unset GATHER_IPS

export SEEDS=$DSE0,$DSE1,$DSE2,$DSE3,$DSE4

vagrant provision dse0
vagrant provision dse1
vagrant provision dse2
vagrant provision dse3
vagrant provision dse4

TESTRUNNER_PUBLIC_IP=$(vagrant public_ip -k host -m testrunner)

echo "Seeds: ${SEEDS}"
echo "Testrunner: ${TESTRUNNER_PUBLIC_IP}"
